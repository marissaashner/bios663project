student %>%
mutate(Walc = factor(Walc)) %>%
ggplot(aes(Walc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
# workday alcohol consumption (5 is highest)
student %>%
mutate(Dalc = factor(Dalc)) %>%
ggplot(aes(Dalc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend Studying
student %>%
mutate(studytime = factor(studytime)) %>%
ggplot(aes(studytime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend travelling
student %>%
mutate(traveltime = factor(traveltime)) %>%
ggplot(aes(traveltime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Guardian
student %>%
mutate(guardian = factor(guardian)) %>%
ggplot(aes(guardian, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
student <- student %>%
select(-guardian)
covariates_int <- model.matrix(G3 ~ ., data = student )
covariates <- covariates_int %>% as.data.frame() %>% select(-`(Intercept)`)
student_d <- data.frame(G3 = student$G3, covariates)
model1 <- lm(G3 ~ ., data = student_d)
VIF = car::vif(model1)
Tol = 1/VIF
df = data.frame(Variable = names(VIF), VIF = VIF, Tolerance = Tol)
df %>% arrange(desc(VIF)) %>% head(10) %>% knitr::kable(align = c("c", "c"),)
xtx = t(covariates_int)%*%covariates_int
Ds_half <- diag(diag(xtx)^-0.5)
sscp <- Ds_half %*% xtx %*% Ds_half
eig_sscp <- eigen(sscp)$values
PCs_sscp <- prcomp(sscp)[2]
CI_sscp <- sqrt(eig_sscp[1]/eig_sscp)
cov_center <- apply(covariates, 2, function(y) y - mean(y))
C <- (t(cov_center)%*%cov_center)/dim(cov_center)[1]
Dc_half <- diag(diag(C)^-0.5)
R <- Dc_half %*% C %*% Dc_half
eig_corr <- eigen(R)$values
CI_corr <- sqrt(eig_corr[1]/eig_corr)
PCs_corr <- prcomp(R)[2]
df <- data.frame("Eigenvalue" = c(eig_corr), "Condition Index" = c(CI_corr))
df2 <- data.frame("Eigenvalue" = c(eig_sscp), "Condition Index" = c(CI_sscp))
df %>% tail(2) %>% knitr::kable(align = c("c", "c"))
df2 %>% filter(`Condition.Index` > 30) %>% knitr::kable(align = c("c", "c"))
PCs_sscp$rotation[1:17,39:40]
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student %>%
ggplot(aes(G3)) + geom_histogram(binwidth = 1, color='black', fill = 'grey') +
geom_vline(xintercept = mean(student$G3), lwd = 1, color = 'red') +
labs(title = "Distribution of Final Math Grade- Final = 0 Removed", x="Final Grade", y="Count")
install.packages("leaps")
library(leaps)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as.data.frame(student)
student$G3[student$G3 == 0] <- NA
best_subset <- regsubsets(G3 ~ ., students, nvmax = 15)
best_subset <- regsubsets.formula(G3 ~ ., students, nvmax = 15)
?regsubsets
best_subset <- regsubsets(G3 ~ ., student, nvmax = 15)
summary(best_subset)
student$G3[student$G3 == 0] <- NA
student <- student %>% select(-G1, -G2)
best_subset <- regsubsets(G3 ~ ., student, nvmax = 15)
tibble(predictors = 1:15,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
results<-summary(best_subset)
tibble(predictors = 1:15,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
results
tibble(predictors = 1:15,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic,
AIC = results$aic)%>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
best_subset <- regsubsets(G3 ~ ., student, nvmax = 15, method='backward')
results<-summary(best_subset)
tibble(predictors = 1:15,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
best_subset
results
coef(best_subset,7)
View(results)
---
title: "Student Performance Dataset Analysis"
author: "Group 14- Marissa Ashner, Ben Bulen, Kyle Grosser, Benjana Guraziu, Kushal Shah"
date: "4/24/2019"
output: html_document
---
<style type="text/css">
body{ /* Normal  */
font-size: 12px;
}
h1.title {
font-size: 24px;
}
code.r{ /* Code block */
font-size: 10px;
}
pre { /* Code block - determines code spacing between lines */
font-size: 10px;
}
</style>
```{r, include = FALSE, warning = FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
```
```{r, warning = FALSE}
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
```
## Introduction
## Data Description
The inital covariates in the dataset are:
1. SCHOOL - student's school (binary: "GP" - Gabriel Pereira or "MS" - Mousinho da Silveira)
2. SEX - student's sex (binary: "F" - female or "M" - male)
3. AGE - student's age (numeric: from 15 to 22)
4. ADDRESS - student's home address type (binary: "U" - urban or "R" - rural)
5. FAMSIZE - family size (binary: "LE3" - less or equal to 3 or "GT3" - greater than 3)
6. PSTATUS - parent's cohabitation status (binary: "T" - living together or "A" - apart)
7. MEDU - mother's education (numeric: 0 - none,  1 - primary education (4th grade), 2 – 5th to 9th grade, 3 – secondary education or 4 – higher education)
8. FEDU - father's education (numeric: 0 - none,  1 - primary education (4th grade), 2 – 5th to 9th grade, 3 – secondary education or 4 – higher education)
9. MJOB - mother's job (nominal: "teacher", "health" care related, civil "services" (e.g. administrative or police), "at_home" or "other")
10. FJOB - father's job (nominal: "teacher", "health" care related, civil "services" (e.g. administrative or police), "at_home" or "other")
11. REASON - reason to choose this school (nominal: close to "home", school "reputation", "course" preference or "other")
12. GUARDIAN - student's guardian (nominal: "mother", "father" or "other")
13. TRAVELTIME - home to school travel time (numeric: 1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)
14. STUDYTIME - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)
15. FAILURES - number of past class failures (numeric: n if 1<=n<3, else 4)
16. SCHOOLSUP - extra educational support (binary: yes or no)
17. FAMSUP - family educational support (binary: yes or no)
18. PAID - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)
19. ACTIVITIES - extra-curricular activities (binary: yes or no)
20. NURSERY - attended nursery school (binary: yes or no)
21. HIGHER - wants to take higher education (binary: yes or no)
22. INTERNET - Internet access at home (binary: yes or no)
23. ROMANTIC - with a romantic relationship (binary: yes or no)
24. FAMREL - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)
25. FREETIME - free time after school (numeric: from 1 - very low to 5 - very high)
26. GOOUT - going out with friends (numeric: from 1 - very low to 5 - very high)
27. DALC - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)
28. WALC - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)
29. HEALTH - current health status (numeric: from 1 - very bad to 5 - very good)
30. ABSENCES - number of school absences (numeric: from 0 to 93)
And the response variables are:
1. G1 - first period grade (numeric: from 0 to 20)
2. G2 - second period grade (numeric: from 0 to 20)
3. G3 - final grade (numeric: from 0 to 20, output target)
For this analysis, we will be considering the `G3` final grade as our response.
## Expoloratory Data Analysis and Variable Filtering
### Distribution of the Response Variable
```{r}
student %>%
ggplot(aes(G3)) + geom_histogram(binwidth = 1, color='black', fill = 'grey') +
geom_vline(xintercept = mean(student$G3), lwd = 1, color = 'red') +
labs(title = "Distribution of Final Math Grade", x="Final Grade", y="Count")
```
```{r}
student %>% select(G1, G2, G3) %>% filter(G3 ==0 & G1 ==0 & G2 ==0)
```
Let's remove the students with a grade of 0, as that doesn't make much practical sense, especially since all of these students have grades higher than 0 first and/or second period.
**BB: agree with this approach, if we are feeling adventurous we could treat those 0's as missing and impute them but let's not over complicate things yet
# MICE code if we decide to impute ##
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as.data.frame(student)
student$G3[student$G3 == 0] <- NA
md.pattern(as.data.frame(student)) #38 students missing G3, almost 10% of data is missing
imputed_data <- mice(student, m=5, maxit = 50, method = "pmm", seed = 500)
summary(imputed_data)
imputed_data$imp$G3
imputed<-complete(imputed_data)
```{r}
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student %>%
ggplot(aes(G3)) + geom_histogram(binwidth = 1, color='black', fill = 'grey') +
geom_vline(xintercept = mean(student$G3), lwd = 1, color = 'red') +
labs(title = "Distribution of Final Math Grade", x="Final Grade", y="Count")
```
### Covariates and their relation to Final Grade
```{r}
student %>%
gather(key = "Variable", value = "Value", -G3) %>%
ggplot(aes(Value, G3)) + facet_wrap(~ Variable, scales = "free") +
geom_boxplot()
```
```{r}
## visualizing absences
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
```
Since the variable "absences" has a greater range of values than most of the other variables, and since after 22 absences the data becomes extremely sparse, we decided to group 23-93 absences within the value "23."
```{r}
## Pooling all absences greater than 22 into the 23 group
student <- student %>%
mutate(absences = case_when(
absences > 22 ~ 23L,
TRUE ~ .$absences))
## visualizing new absences variable
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
```
"Absences" still has a much greater spread of values than the other variables, so we will try binning them to see how that effects our models.
```{r}
## Binning absences into 5 groups with 5 absence numbers each (except for the last group that includes all absences greater than or equal to 20).
# Binning
student <- student %>%
mutate(absences = case_when(
absences < 5 ~ 1L,
absences >= 5 & absences < 10 ~ 2L,
absences >= 10 & absences < 15 ~ 3L,
absences >= 15 & absences < 20 ~ 4L,
absences >= 20 ~ 5L,
TRUE ~ .$absences))
## visualizing new absences variable
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
```
```{r}
## visualizing alcohol consumption
# weekend alcohol consumption (5 is highest)
student %>%
mutate(Walc = factor(Walc)) %>%
ggplot(aes(Walc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
# workday alcohol consumption (5 is highest)
student %>%
mutate(Dalc = factor(Dalc)) %>%
ggplot(aes(Dalc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend Studying
student %>%
mutate(studytime = factor(studytime)) %>%
ggplot(aes(studytime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend travelling
student %>%
mutate(traveltime = factor(traveltime)) %>%
ggplot(aes(traveltime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Guardian
student %>%
mutate(guardian = factor(guardian)) %>%
ggplot(aes(guardian, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
```
Based on these plots, we decided to remove the variable "guardian" from our dataset since it didn't seem to have any influence on the outcome.
```{r}
student <- student %>%
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
student %>%
ggplot(aes(G3)) + geom_histogram(binwidth = 1, color='black', fill = 'grey') +
geom_vline(xintercept = mean(student$G3), lwd = 1, color = 'red') +
labs(title = "Distribution of Final Math Grade", x="Final Grade", y="Count")
student %>% select(G1, G2, G3) %>% filter(G3 ==0 & G1 ==0 & G2 ==0)
student <- student %>% filter(G3 != 0) %>% select(-G1, -G2)
student %>%
ggplot(aes(G3)) + geom_histogram(binwidth = 1, color='black', fill = 'grey') +
geom_vline(xintercept = mean(student$G3), lwd = 1, color = 'red') +
labs(title = "Distribution of Final Math Grade", x="Final Grade", y="Count")
student %>%
gather(key = "Variable", value = "Value", -G3) %>%
ggplot(aes(Value, G3)) + facet_wrap(~ Variable, scales = "free") +
geom_boxplot()
## visualizing absences
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
## Pooling all absences greater than 22 into the 23 group
student <- student %>%
mutate(absences = case_when(
absences > 22 ~ 23L,
TRUE ~ .$absences))
## visualizing new absences variable
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
## Binning absences into 5 groups with 5 absence numbers each (except for the last group that includes all absences greater than or equal to 20).
# Binning
student <- student %>%
mutate(absences = case_when(
absences < 5 ~ 1L,
absences >= 5 & absences < 10 ~ 2L,
absences >= 10 & absences < 15 ~ 3L,
absences >= 15 & absences < 20 ~ 4L,
absences >= 20 ~ 5L,
TRUE ~ .$absences))
## visualizing new absences variable
student %>%
# filter(absences < 23) %>%
mutate(absences = factor(absences)) %>%
ggplot(aes(absences, G3)) +
geom_boxplot()
ggplot(student, aes(absences, G3)) +
geom_jitter() +
geom_smooth()
## visualizing alcohol consumption
# weekend alcohol consumption (5 is highest)
student %>%
mutate(Walc = factor(Walc)) %>%
ggplot(aes(Walc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
# workday alcohol consumption (5 is highest)
student %>%
mutate(Dalc = factor(Dalc)) %>%
ggplot(aes(Dalc, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend Studying
student %>%
mutate(studytime = factor(studytime)) %>%
ggplot(aes(studytime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Time spend travelling
student %>%
mutate(traveltime = factor(traveltime)) %>%
ggplot(aes(traveltime, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
## Guardian
student %>%
mutate(guardian = factor(guardian)) %>%
ggplot(aes(guardian, G3)) +
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5)
student <- student %>%
select(-guardian)
View(student)
best_subset <- regsubsets(G3 ~ ., student, nvmax = 30, method='exhaustive')
results<-summary(best_subset)
tibble(predictors = 1:30,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
#Based on results the best models fall within 5-20 vars, so I only considered 20 variables in this run
best_subset <- regsubsets(G3 ~ ., student, nvmax = 30, method='exhaustive')
results<-summary(best_subset)
tibble(predictors = 1:30,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
which.max(results$adjr2)
which.min(results$bic)
which.min(results$cp)
#Based on results the best models fall within 5-20 vars, so I only considered 20 variables in this run
best_subset <- regsubsets(G3 ~ ., student, nvmax = 20, method='exhaustive')
results<-summary(best_subset)
tibble(predictors = 1:30,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
#Based on results the best models fall within 5-20 vars, so I only considered 20 variables in this run
best_subset <- regsubsets(G3 ~ ., student, nvmax = 20, method='exhaustive')
results<-summary(best_subset)
tibble(predictors = 1:20,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
which.max(results$adjr2)
which.min(results$bic)
which.min(results$cp)
coef(best_subset, 8)
coef(best_subset, 7)
covariates_int <- model.matrix(G3 ~ ., data = student )
covariates <- covariates_int %>% as.data.frame() %>% select(-`(Intercept)`)
student_d <- data.frame(G3 = student$G3, covariates)
model1 <- lm(G3 ~ ., data = student_d)
VIF = car::vif(model1)
Tol = 1/VIF
df = data.frame(Variable = names(VIF), VIF = VIF, Tolerance = Tol)
df %>% arrange(desc(VIF)) %>% head(10) %>% knitr::kable(align = c("c", "c"))
xtx = t(covariates_int)%*%covariates_int
Ds_half <- diag(diag(xtx)^-0.5)
sscp <- Ds_half %*% xtx %*% Ds_half
eig_sscp <- eigen(sscp)$values
PCs_sscp <- prcomp(sscp)[2]
CI_sscp <- sqrt(eig_sscp[1]/eig_sscp)
cov_center <- apply(covariates, 2, function(y) y - mean(y))
C <- (t(cov_center)%*%cov_center)/dim(cov_center)[1]
Dc_half <- diag(diag(C)^-0.5)
R <- Dc_half %*% C %*% Dc_half
eig_corr <- eigen(R)$values
CI_corr <- sqrt(eig_corr[1]/eig_corr)
PCs_corr <- prcomp(R)[2]
df <- data.frame("Eigenvalue" = c(eig_corr), "Condition Index" = c(CI_corr))
df2 <- data.frame("Eigenvalue" = c(eig_sscp), "Condition Index" = c(CI_sscp))
df %>% tail(2) %>% knitr::kable(align = c("c", "c"))
df2 %>% filter(`Condition.Index` > 30) %>% knitr::kable(align = c("c", "c"))
PCs_sscp$rotation[1:17,37:38]
colnames(student_d)[c(8, 11:17)]
summary(model1)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
student <- read.table("student-mat.csv", sep=";", header=T)
student <- as_tibble(student)
View(student)
student_all <- read.table("student-mat.csv", sep=";", header=T)
student_all <- as_tibble(student)
modelsmall <- lm(G3 ~ Mjobhealth + Mjobservices + Fjobteacher + failures + schoolsupyes + goout,
data = student_all)
install.packages("GGally")
ggcorr(student)
library(ggplot2)
ggcorr(student)
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
ggcorr(student)
